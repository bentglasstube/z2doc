# Data Tables within ROM bank 4

# Functions within ROM bank 4
LABEL { NAME "SpecialCodeForStalfos";               ADDR  $965A;    };

# Determines based on RNG whether you get a red jar or red IK.
# 50/50 Odds.  Used for palaces 3 and 4.
LABEL { NAME "SpecialCodeForHidden5050RedJar";      ADDR  $AF61;    };

# Guaranteed red jar.  Used for palaces 1, 2, and 5.
LABEL { NAME "SpecialCodeForHiddenRedJar";          ADDR  $B83E;    };

# Ranges within ROM bank 4
RANGE { START $8000;    END   $80ED; TYPE ByteTable; };
RANGE { START $80EE;    END   $8106; TYPE Code;      };
RANGE { START $8107;    END   $812E; TYPE ByteTable; };
RANGE { START $812F;    END   $8132; TYPE Code;      };
RANGE { START $8133;    END   $8166; TYPE ByteTable; };
RANGE { START $8167;    END   $817A; TYPE Code;      };
RANGE { START $817B;    END   $8198; TYPE ByteTable; };
RANGE { START $8199;    END   $824B; TYPE Code;      };
RANGE { START $824C;    END   $8258; TYPE ByteTable; };
RANGE { START $8259;    END   $8264; TYPE Code;      };
RANGE { START $8265;    END   $826C; TYPE ByteTable; };
RANGE { START $826D;    END   $827D; TYPE Code;      };
RANGE { START $827E;    END   $8296; TYPE ByteTable; };
RANGE { START $8297;    END   $82D2; TYPE Code;      };
RANGE { START $82D3;    END   $82D4; TYPE ByteTable; };
RANGE { START $82D5;    END   $82E4; TYPE Code;      };
RANGE { START $82E5;    END   $850B; TYPE ByteTable; };
RANGE { START $850C;    END   $8519; TYPE Code;      };
RANGE { START $851A;    END   $95AC; TYPE ByteTable; };
RANGE { START $95AD;    END   $95AD; TYPE Code;      };
RANGE { START $95AE;    END   $9659; TYPE ByteTable; };
RANGE { START $965A;    END   $96AD; TYPE Code;      };
RANGE { START $96AE;    END   $96B0; TYPE ByteTable; };
RANGE { START $96B1;    END   $972D; TYPE Code;      };
RANGE { START $972E;    END   $973C; TYPE ByteTable; };
RANGE { START $973D;    END   $974A; TYPE Code;      };
RANGE { START $974B;    END   $974D; TYPE ByteTable; };
RANGE { START $974E;    END   $97B0; TYPE Code;      };
RANGE { START $97B1;    END   $97B4; TYPE ByteTable; };
RANGE { START $97B5;    END   $97DC; TYPE Code;      };
RANGE { START $97DD;    END   $97E0; TYPE ByteTable; };
RANGE { START $97E1;    END   $9814; TYPE Code;      };
RANGE { START $9815;    END   $981C; TYPE ByteTable; };
RANGE { START $981D;    END   $9887; TYPE Code;      };
RANGE { START $9888;    END   $98A8; TYPE ByteTable; };
RANGE { START $98A9;    END   $9967; TYPE Code;      };
RANGE { START $9968;    END   $9969; TYPE ByteTable; };
RANGE { START $996A;    END   $99EA; TYPE Code;      };
RANGE { START $99EB;    END   $99EC; TYPE ByteTable; };
RANGE { START $99ED;    END   $9A7D; TYPE Code;      };
RANGE { START $9A7E;    END   $9A81; TYPE ByteTable; };
RANGE { START $9A82;    END   $9AA9; TYPE Code;      };
RANGE { START $9AAA;    END   $9AD3; TYPE ByteTable; };
RANGE { START $9AD4;    END   $9AE2; TYPE Code;      };
RANGE { START $9AE3;    END   $9AEA; TYPE ByteTable; };
RANGE { START $9AEB;    END   $9B88; TYPE Code;      };
RANGE { START $9B89;    END   $9B94; TYPE ByteTable; };
RANGE { START $9B95;    END   $9BCC; TYPE Code;      };
RANGE { START $9BCD;    END   $9BDC; TYPE ByteTable; };
RANGE { START $9BDD;    END   $9C7C; TYPE Code;      };
RANGE { START $9C7D;    END   $9C8B; TYPE ByteTable; };
RANGE { START $9C8C;    END   $9CF6; TYPE Code;      };
RANGE { START $9CF7;    END   $9CF9; TYPE ByteTable; };
RANGE { START $9CFA;    END   $9E34; TYPE Code;      };
RANGE { START $9E35;    END   $9E44; TYPE ByteTable; };
RANGE { START $9E45;    END   $9EBC; TYPE Code;      };
RANGE { START $9EBD;    END   $9EC0; TYPE ByteTable; };
RANGE { START $9EC1;    END   $9EDF; TYPE Code;      };
RANGE { START $9EE0;    END   $AAAC; TYPE ByteTable; };
RANGE { START $AAAD;    END   $AAAD; TYPE Code;      };
RANGE { START $AAAE;    END   $AB97; TYPE ByteTable; };
RANGE { START $AB98;    END   $ABE0; TYPE Code;      };
RANGE { START $ABE1;    END   $ABE3; TYPE ByteTable; };
RANGE { START $ABE4;    END   $ACD0; TYPE Code;      };
RANGE { START $ACD1;    END   $ACD8; TYPE ByteTable; };
RANGE { START $ACD9;    END   $AD93; TYPE Code;      };
RANGE { START $AD94;    END   $AD9D; TYPE ByteTable; };
RANGE { START $AD9E;    END   $AE1F; TYPE Code;      };
RANGE { START $AE20;    END   $AE2F; TYPE ByteTable; };
RANGE { START $AE30;    END   $AE46; TYPE Code;      };
RANGE { START $AE47;    END   $AE4E; TYPE ByteTable; };
RANGE { START $AE4F;    END   $AF21; TYPE Code;      };
RANGE { START $AF22;    END   $AF25; TYPE ByteTable; };
RANGE { START $AF26;    END   $AFB3; TYPE Code;      };
RANGE { START $AFB4;    END   $AFBB; TYPE ByteTable; };
RANGE { START $AFBC;    END   $B0A9; TYPE Code;      };
RANGE { START $B0AA;    END   $B0AC; TYPE ByteTable; };
RANGE { START $B0AD;    END   $B111; TYPE Code;      };
RANGE { START $B112;    END   $B113; TYPE ByteTable; };
RANGE { START $B114;    END   $B114; TYPE Code;      };
RANGE { START $B115;    END   $B11E; TYPE ByteTable; };
RANGE { START $B11F;    END   $B137; TYPE Code;      };
RANGE { START $B138;    END   $B13F; TYPE ByteTable; };
RANGE { START $B140;    END   $B199; TYPE Code;      };
RANGE { START $B19A;    END   $B1BD; TYPE ByteTable; };
RANGE { START $B1BE;    END   $B1BE; TYPE Code;      };
RANGE { START $B1BF;    END   $B1DD; TYPE ByteTable; };
RANGE { START $B1DE;    END   $B265; TYPE Code;      };
RANGE { START $B266;    END   $B28F; TYPE ByteTable; };
RANGE { START $B290;    END   $B33E; TYPE Code;      };
RANGE { START $B33F;    END   $B342; TYPE ByteTable; };
RANGE { START $B343;    END   $B397; TYPE Code;      };
RANGE { START $B398;    END   $B3A7; TYPE ByteTable; };
RANGE { START $B3A8;    END   $B554; TYPE Code;      };
RANGE { START $B555;    END   $B556; TYPE ByteTable; };
RANGE { START $B557;    END   $B55C; TYPE Code;      };
RANGE { START $B55D;    END   $B5AD; TYPE ByteTable; };
RANGE { START $B5AE;    END   $B629; TYPE Code;      };
RANGE { START $B62A;    END   $B62B; TYPE ByteTable; };
RANGE { START $B62C;    END   $B66D; TYPE Code;      };
RANGE { START $B66E;    END   $B670; TYPE ByteTable; };
RANGE { START $B671;    END   $B6C1; TYPE Code;      };
RANGE { START $B6C2;    END   $B6C4; TYPE ByteTable; };
RANGE { START $B6C5;    END   $B721; TYPE Code;      };
RANGE { START $B722;    END   $B727; TYPE ByteTable; };
RANGE { START $B728;    END   $B748; TYPE Code;      };
RANGE { START $B749;    END   $B758; TYPE ByteTable; };
RANGE { START $B759;    END   $B7A7; TYPE Code;      };
RANGE { START $B7A8;    END   $B7AF; TYPE ByteTable; };
RANGE { START $B7B0;    END   $B7BE; TYPE Code;      };
RANGE { START $B7BF;    END   $B7C4; TYPE ByteTable; };
RANGE { START $B7C5;    END   $B85E; TYPE Code;      };
RANGE { START $B85F;    END   $B860; TYPE ByteTable; };
RANGE { START $B861;    END   $B92F; TYPE Code;      };
RANGE { START $B930;    END   $B93B; TYPE ByteTable; };
RANGE { START $B93C;    END   $B979; TYPE Code;      };
RANGE { START $B97A;    END   $B97B; TYPE ByteTable; };
RANGE { START $B97C;    END   $BA17; TYPE Code;      };
RANGE { START $BA18;    END   $BA1F; TYPE ByteTable; };
RANGE { START $BA20;    END   $BA53; TYPE Code;      };
RANGE { START $BA54;    END   $BA56; TYPE ByteTable; };
RANGE { START $BA57;    END   $BAC0; TYPE Code;      };
RANGE { START $BAC1;    END   $BAC2; TYPE ByteTable; };
RANGE { START $BAC3;    END   $BAD7; TYPE Code;      };
RANGE { START $BAD8;    END   $BAD9; TYPE ByteTable; };
RANGE { START $BADA;    END   $BC2A; TYPE Code;      };
RANGE { START $BC2B;    END   $BC4D; TYPE ByteTable; };
RANGE { START $BC4E;    END   $BC75; TYPE Code;      };
RANGE { START $BC76;    END   $BC7D; TYPE ByteTable; };
RANGE { START $BC7E;    END   $BCAB; TYPE Code;      };
RANGE { START $BCAC;    END   $BCAE; TYPE ByteTable; };
RANGE { START $BCAF;    END   $BCE3; TYPE Code;      };
RANGE { START $BCE4;    END   $BCEE; TYPE ByteTable; };
RANGE { START $BCEF;    END   $BD72; TYPE Code;      };
RANGE { START $BD73;    END   $BD74; TYPE ByteTable; };
RANGE { START $BD75;    END   $BDCD; TYPE Code;      };
RANGE { START $BDCE;    END   $BDCF; TYPE ByteTable; };
RANGE { START $BDD0;    END   $BDEA; TYPE Code;      };
RANGE { START $BDEB;    END   $BDEC; TYPE ByteTable; };
RANGE { START $BDED;    END   $BECC; TYPE Code;      };
RANGE { START $BECD;    END   $BEE1; TYPE ByteTable; };
RANGE { START $BEE2;    END   $BEFC; TYPE Code;      };
